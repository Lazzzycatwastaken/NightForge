name: Test ASCII Converter

on:
  push:
    paths:
      - 'tools/**'
      - 'src/rendering/**'
  pull_request:
    paths:
      - 'tools/**'
      - 'src/rendering/**'

jobs:
  test-converter:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential imagemagick
    
    - name: Create test image
      run: |
        # Create a simple test image using ImageMagick
        convert -size 64x32 xc:white -fill black -gravity center -pointsize 20 -annotate +0+0 "TEST" test.png
    
    - name: Build converter
      run: |
        mkdir build && cd build
        cmake ..
        make webp_to_ascii -j$(nproc)
    
    - name: Test ASCII conversion
      run: |
        cd build
        ./webp_to_ascii ../test.png clean no 40
        echo "✓ ASCII conversion successful"
    
    - name: Test different styles
      run: |
        cd build
        echo "Testing clean style:"
        ./webp_to_ascii ../test.png clean no 30
        echo -e "\nTesting high_fidelity style:"
        ./webp_to_ascii ../test.png high_fidelity no 30
        echo -e "\nTesting block style:"
        ./webp_to_ascii ../test.png block no 30
        echo "✓ All styles work"

  test-converter-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up MSYS2 (MINGW64)
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-imagemagick
          make

    - name: Build converter
      shell: msys2 {0}
      run: |
        mkdir build && cd build
        cmake .. -G "Unix Makefiles"
        cmake --build . --parallel $(nproc) --target webp_to_ascii

    - name: Test ASCII conversion
      shell: msys2 {0}
      run: |
        cd build
        if [ ! -f webp_to_ascii ]; then echo "webp_to_ascii not found; skipping"; exit 0; fi
        # Create a small PNG using ImageMagick (available via pacman) or fallback to converting a simple PPM
        convert -size 64x32 xc:white -fill black -gravity center -pointsize 20 -annotate +0+0 "TEST" ../test.png || (
          printf "P3\n64 32\n255\n" > ../test.ppm && for i in {1..2048}; do echo "255 255 255" >> ../test.ppm; done && convert ../test.ppm ../test.png
        )
        ./webp_to_ascii ../test.png clean no 40
        echo "✓ ASCII conversion successful on Windows (MINGW)"